// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
  {
    "context": "(Workspace && !Editor && !Terminal) || (Editor && VimControl)",
    "bindings": {
      "space s f": "file_finder::Toggle",
      "space s p": [
        "projects::OpenRecent",
        {
          "create_new_window": true
        }
      ],
      "space space": ["tab_switcher::Toggle", { "select_last": true }],
      "space t": "workspace::NewCenterTerminal",
      "space g d": "editor::ToggleSelectedDiffHunks",
      "space g g": "git_panel::ToggleFocus",
      "space s w": "pane::DeploySearch",
      "g f": "editor::OpenExcerpts",
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown",

      // +LSP
      "space c a": "editor::ToggleCodeActions",
      "space .": "editor::ToggleCodeActions",
      "space c r": "editor::Rename",
      "g d": "editor::GoToDefinition",
      "g D": "editor::GoToDefinitionSplit",
      "g i": "editor::GoToImplementation",
      "g I": "editor::GoToImplementationSplit",
      "g t": "editor::GoToTypeDefinition",
      "g T": "editor::GoToTypeDefinitionSplit",
      "g r": "editor::FindAllReferences",
      "] d": "editor::GoToDiagnostic",
      "[ d": "editor::GoToPreviousDiagnostic",

      // Symbol search
      "space s s": "outline::Toggle",
      "space s S": "project_symbols::Toggle",

      // Diagnostic
      "space x x": "diagnostics::Deploy",

      // +Git
      // Git prev/next hunk
      "] h": "editor::GoToHunk",
      "[ h": "editor::GoToPreviousHunk",

      // Close active panel
      "space b d": "pane::CloseActiveItem",
      // Close other items
      "space b o": "pane::CloseOtherItems",
      // Project search
      "space /": "pane::DeploySearch",
      // Show project panel with current file
      "-": "pane::RevealInProjectPanel",

      "space r t": ["editor::SpawnNearestTask", { "reveal": "no_focus" }]
    }
  },
  {
    "context": "Workspace",
    "bindings": {
      "shift-h": "pane::ActivatePreviousItem",
      "shift-l": "pane::ActivateNextItem",
      "shift-q": "pane::CloseActiveItem",
      "ctrl-q": "pane::CloseActiveItem",
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown",
      "cmd-b": "workspace::ToggleRightDock"
    }
  },
  // File panel (netrw)
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "a": "project_panel::NewFile",
      "A": "project_panel::NewDirectory",
      "r": "project_panel::Rename",
      "d": "project_panel::Delete",
      "x": "project_panel::Cut",
      "c": "project_panel::Copy",
      "p": "project_panel::Paste",
      "-": "workspace::ToggleRightDock"
    }
  }
]
