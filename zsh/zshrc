[ -f $HOME/dotfiles/zsh/work ] && source $HOME/dotfiles/zsh/work

typeset -U PATH
autoload colors; colors;

git_branch_prompt() {
  if git rev-parse --is-inside-work-tree &>/dev/null; then
    local branch dirty stash

    branch=$(git symbolic-ref --quiet --short HEAD 2>/dev/null || git rev-parse --short HEAD 2>/dev/null)

    git diff --quiet --ignore-submodules HEAD 2>/dev/null || dirty="*"

    echo " (${branch}${dirty})"
  fi
}

setopt prompt_subst
NEWLINE=$'\n'
PS1="%F{green}[clown@"
if [[ -n "$SSH_CONNECTION" ]]; then
  PS1+="%{$SSH_CONNECTION%% *%%}"
else
  PS1+="local"
fi
PS1+="] %~\$(git_branch_prompt)%f$NEWLINE >> "

ZSH_DISABLE_COMPFIX=true

export DOTFILES="$HOME/dotfiles"
export PATH=/usr/local/bin:$PATH
export PATH=/usr/local/sbin:$PATH
export PATH=~/.composer/vendor/bin:$PATH

# execute locally installed npm modules
export PATH="${pwd}/node_modules/.bin:$PATH"
# put things in ~/.bin into my $PATH
export PATH="$HOME/.bin:$PATH"

setopt AUTO_CD              # Go to folder path without using cd.

bindkey '^f' autosuggest-accept

zstyle ':completion:*' completer _extensions _complete _approximate

zstyle ':completion:*' menu select  # menu with selection
zstyle ':completion:*' increment yes
zstyle ':completion:*' verbose yes
zstyle ':completion:*' squeeze-slashes yes  # replace // with /

zstyle ':completion:*' file-sort modification  # show recently used files first
zstyle ':completion:*' list-dirs-first yes
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"  # colored files and directories, blue selection box
zstyle ':completion:*' ignored-patterns '.git'

zstyle ':completion:*' rehash false  # improves performance
zstyle ':completion:*' use-cache true

bindkey '^I' complete-word  # Tab, complete instead of expand-and-complete
bindkey '^[[3~' delete-char  # Delete
bindkey '^[[Z' reverse-menu-complete  # Shift+Tab
bindkey '^[[1;5D' backward-word  # Control-Left
bindkey '^[[1;5C' forward-word  # Control-Right

TZ="Europe/London"
HISTFILE=$HOME/.zhistory
HISTSIZE=20000
SAVEHIST=20000
setopt INC_APPEND_HISTORY     # Immediately append to history file.
setopt EXTENDED_HISTORY       # Record timestamp in history.
setopt HIST_EXPIRE_DUPS_FIRST # Expire duplicate entries first when trimming history.
setopt HIST_IGNORE_DUPS       # Dont record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS   # Delete old recorded entry if new entry is a duplicate.
setopt HIST_FIND_NO_DUPS      # Do not display a line previously found.
setopt HIST_IGNORE_SPACE      # Dont record an entry starting with a space.
setopt HIST_SAVE_NO_DUPS      # Dont write duplicate entries in the history file.
setopt SHARE_HISTORY          # Share history between all sessions.
unsetopt HIST_VERIFY          # Execute commands using history (e.g.: using !$) immediately
HOSTNAME="`hostname`"
PAGER='less'
export AUTOENV_FILE_ENTER=".env"
DEFAULT_USER="t"
unsetopt correct
unsetopt correctall
DISABLE_CORRECTION="true"

GIT_MERGE_AUTOEDIT=no
export GIT_MERGE_AUTOEDIT

export EDITOR='nvim'
export VEDITOR='code'

source $HOME/dotfiles/zsh/functions
source $HOME/dotfiles/zsh/aliases

#FZF
# Setting ag as the default source for fzf
source <(fzf --zsh)
ZSH_HIGHLIGHT_FILE=/opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
[[ -f $ZSH_HIGHLIGHT_FILE ]] && source $ZSH_HIGHLIGHT_FILE
autosuggest_path="$(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh"
[[ -f $autosuggest_path ]] && source "$autosuggest_path"
